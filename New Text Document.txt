State Management Types
1.client-side state management
2.server-side state management

1.client-side state management:
*Whenever we use Client-Side State Management, the state related information will directly get stored on the client-side. 
*That specific information will travel back and communicate with every request generated by the user 
    then afterwards provides responses after server-side communication.

Client-Side State Management techniques are,
a.View State
b.Hidden field
c.Cookies
d.Control State
e.Query Strings

view state:
	*the user wants to maintain or store their data temporarily after a post-back
	*It is page-level State Management
	*Used for holding data temporarily
	*Can store any type of data
	*Property dependent

hidden field:
	*A hidden field is used for storing small amounts of data on the client side.
	*It is invisible in the browser.

cookies:
	*A set of Cookies is a small text file that is stored in the user's hard drive using the client's browser.
	*two types 1.Persistent Cookie  2.non-Persistent Cookie 
	*Store information temporarily
	*It's just a simple small sized text file
	*Can be changed depending on requirements
	*User Preferred
	*Requires only a few bytes or KBs of space for creating cookies

control state:
 	*Control state is based on the custom control option
	*Can't be modified
	*Accessed directly or disabled

query string:
	*These in a general case are used for holding some value from a different page and move these values to the different page.
	*The information stored in it can be easily navigated to one page to another or to the same page as well.

2.Server-Side State Management
 
*Server-Side State Management is different from Client-Side State Management but the operations and working is somewhat the same in functionality.
* In Server-Side State Management all the information is stored in the user memory. 
*Due to this functionality there is more secure domains at the server side in comparison to Client-Side State Management.

Server-Side State Management techniques
--Session State
--Application State

session state:
	*you can use the session object to store the value which is accessible throughout the application in single browser
	*he Session cannot be accessible outside of the browser where it has been created. 
	*Every browser creates own session.
	*If you leave the application or your session is going to time out then you will not access the session data.
	*the session data lost after specific time period.

application state:
	*It is a global storage to store the value which will be accessible to all the pages. 
	*It also store the data into key/value pair.
	*The information stored into application state is accessible to all the page.
	*application state data is not permanent. 
	*If you restart or shutdown your application then application state will lost.